require 'action_mailer'
require 'resolv-replace'

ActionMailer::Base.smtp_settings = { :address => 'smtp.gmail.com',
                                     :port => 80,
                                     :domain => 'ucdconnect.ie',
                                      :user_name => 'sahiba.mittal@ucdconnect.ie',
                                      :password => '********',
                                      :authentication => :plain,
                                      :enable_starttls_auto => true }

class SimpleMailer < ActionMailer::Base
  def simple_message(recipient, subject_line, body_message)
    mail(:from => 'sahiba.mittal@ucdconnect.ie',
          :to => recipient,
          :subject => subject_line,
          :body => body_message)
  end
end

def convert_to_string(email)
  temp = "#{email.subject} #{email.body}"
  temp
end

# top-level script to compose and print emails
emails = []
reg_email1 = SimpleMailer.simple_message('receiver@gmail.com', 'Query regarding lectures', 'This is body of regular_email_01. It contains queries of students.')
emails << reg_email1
reg_email2 = SimpleMailer.simple_message('receiver@gmail.com', 'New vacancy at XYZ', 'This is body of regular_email_02. It has new post available to apply for job.')
emails << reg_email2
reg_email3 = SimpleMailer.simple_message('receiver@gmail.com', 'Deadline for practical submission', 'This is body of regular_email_03. Reminder to submit practical within deadlines.')
emails << reg_email3
reg_email4 = SimpleMailer.simple_message('receiver@gmail.com', 'Invitation for meeting', 'This is body of regular_email_04. It is an invitation to attend a business meeting.')
emails << reg_email4
reg_email5 = SimpleMailer.simple_message('receiver@gmail.com', 'Apple Invoice for November', 'This is body of regular_email_05. Invoice for bill payment generated by Apple.')
emails << reg_email5
spam_email1 = SimpleMailer.simple_message('receiver@gmail.com', 'Start earning extra income', 'This is body of spam_email_01. Make money easily, fill your details now!')
emails << spam_email1
spam_email2 = SimpleMailer.simple_message('receiver@gmail.com', 'Avail a lifecover instantly with monthly income plan', 'This is body of spam_email_02. Click here to get a life cover within your monthly income.')
emails << spam_email2
spam_email3 = SimpleMailer.simple_message('receiver@gmail.com', 'Last chance to avail this offer', 'This is body of spam_email_03. Click on the link below to avail this offer and win upto xxx Euros!')
emails << spam_email3
spam_email4 = SimpleMailer.simple_message('receiver@gmail.com', 'Get paid to complete this survey', 'This is body of spam_email_04. Complete the survey using link and earn sitting at home!')
emails << spam_email4
spam_email5 = SimpleMailer.simple_message('receiver@gmail.com', 'Get cashless insurance for your family', 'This is body of spam_email_05. Download the attachment to fill form and get a cashless insurance now!')
emails << spam_email5

#printing all emails - 5 regular + 5 spam
email_strings = []
emails.each do |email|
  puts "#{email}\n"
  puts "\n***********************************************"

  #extracting from each email its subject and body and converting it into single string
  email_strings << convert_to_string(email)
end

email_array_of_words = []
# converting each string into array of words
email_strings.each do |email_string|
  email_array_of_words << email_string.split(/ /).uniq!
end

#applying regular expression to classify which files are spam based on word xxxspamxxx
puts "\n Spam emails are : "
email_array_of_words.each do |email_content|
  email_content.each do |word|
    if word =~ /spam/ then
      puts word
    end
  end
end

